import numpy as np
import matplotlib.pyplot as plt
import numpy.linalg as lin

execs = np.array([2,4,8,16,24],int)
tp_off = np.array([1948,3897,7525,11760,16236],float)
tp_off_f = lin.norm(tp_off)
tp_off /= lin.norm(tp_off)
lt_off = np.array([0.1282935865,0.06414679325,0.2515553851818182,0.9822892832884614,2.885447541386792],float)
lt_off_f = lin.norm(lt_off)
lt_off /= lin.norm(lt_off)
tp_on = np.array([70,42,39,20,11],float)
tp_on_f = lin.norm(tp_on)
tp_on /= lin.norm(tp_on)
lt_on = np.array([14.1412,11.76716837675,39.741379383875,152.66866188675002,366.69366374525003],float)
lt_on_f = lin.norm(lt_on)
lt_on /= lin.norm(lt_on)
plt.figure()
plt.plot(execs,tp_off, 'k', color='red', label='Offline, normalization factor: ' + str(int(tp_off_f)))
plt.plot(execs,tp_on, 'k', color='darkgreen', label='Online, normalization factor: ' + str(int(tp_on_f)))
x1,x2,y1,y2 = plt.axis()
plt.axis((2,24,y1,y2))
plt.title('Goodput benchmark')
plt.xlabel('Concurrent Threads')
plt.ylabel('Normalized Goodput')
plt.legend(loc=2)
plt.figure()
plt.plot(execs,lt_off, 'k', color='red', label='Offline, normalization factor: ' + str(int(lt_off_f)))
plt.plot(execs,lt_on, 'k', color='darkgreen', label='Online, normalization factor: ' + str(int(lt_on_f)))
x1,x2,y1,y2 = plt.axis()
plt.axis((2,24,y1,y2))
plt.title('Latency benchmark')
plt.xlabel('Concurrent Threads')
plt.ylabel('Normalized Latency')
plt.legend(loc=2)
plt.show()
